@using System.Security.Claims;

@model CRMSystem.Web.ViewModels.Deals.DealViewModel
@{
    this.ViewData["Title"] = Model.Name;
    void DisplayOrders(int? orderId)
    {
        var orders = this.Model.Orders.Where(x => x.DealId == Model.Id);
        if (!orders.Any())
        {
            return;
        }

        @foreach (var order in orders)
        {
            <div class="container-fluid mt-100">
                <div class="row">
                    <div class="col-md-12">
                        <div class="card mb-4">
                            <div class="card-header">
                                <div class="media flex-wrap w-100 align-items-center">
                                    <img src="https://res.cloudinary.com/dxfq3iotg/image/upload/v1574583246/AAA/2.jpg" class="d-block ui-w-40 rounded-circle" alt="">
                                    <div class="media-body ml-3">
                                        @order.ProductName
                                    </div>
                                    @*<div class="text-muted small ml-3">
                                        @if (this.User.Identity.IsAuthenticated)
                                        {
                                            <div class="px-4 pt-3"> <button type="button" class="btn btn-secondary" onclick="AddOrderForm(@order.Id)"><i class="fa fa-plus"></i>&nbsp; Order</button> </div>
                                        }
                                    </div>
                                    @{ DisplayOrders(order.Id); }*@
                                </div>
                            </div>
                            <div class="card-body">                                
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }


    }
}

@if (this.TempData["InfoMessage"] != null)
{
    <div class="alert alert-success">
        @this.TempData["InfoMessage"]
    </div>
}

<h1>@Model.Name</h1>
<div class="container-fluid mt-100">
    <div class="row">
        <div class="col-md-12">
            <div class="card mb-4">
                <div class="card-header">
                    <div class="media flex-wrap w-100 align-items-center">
                        @*<img src="https://res.cloudinary.com/dxfq3iotg/image/upload/v1574583246/AAA/2.jpg" class="d-block ui-w-40 rounded-circle" alt="">*@
                        <div class="media-body ml-3">
                            Account owner: @Model.UserUserName

                            <div class="text-muted small">
                                <time datetime="@Model.CreatedOn.ToString("O")"></time>
                            </div>

                            Stage: @Model.Stage
                        </div>
                        @*<div class="text-muted small ml-3">
                                <form id="votesForm" method="post"></form>
                                <div>
                                    <a href="#" onclick="sendVote(@Model.Id, true)">
                                        <i class="fa fa-thumbs-up"></i>
                                    </a>
                                </div>
                                <div id="votesCount">@Model.VotesCount</div>
                                <div>
                                    <a href="#" onclick="sendVote(@Model.Id, false)">
                                        <i class="fa fa-thumbs-down"></i>
                                    </a>
                                </div>
                            </div>*@
                    </div>
                </div>
                <td>
                    @if (this.User.IsInRole("Administrator") || this.User.FindFirstValue(ClaimTypes.NameIdentifier) == Model.UserId)
                    {
                        <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a>
                    }
                    <a asp-action="Details" asp-route-id="@Model.Id">Details</a> |
                    @if (this.User.IsInRole("Administrator"))
                    {
                        <a asp-action="Delete" asp-route-id="@Model.Id">Delete</a>
                    }
                <div>
                    <form asp-controller="Orders" asp-action="Create" method="post">
                        
                        @**<div>
                <label for="AccountName"></label>
                <textarea name="AccountName" id="AccountName" class="form-control"></textarea>
            </div>*<div>
                <label for="AccountName"></label>
                <textarea name="AccountName" id="AccountName" class="form-control"></textarea>
            </div>*@
                        <div>
                            <input type="submit" class="btn btn-primary" value="Create new deal" />
                        </div>
                    </form>
                </div>

                </td>
                <div class="card-body">

                    @if (this.User.Identity.IsAuthenticated)
                    {
                        <div class="px-4 pt-3"> <button type="button" class="btn btn-primary float-right" onclick="showAddOrderForm(0)"><i class="fa fa-plus"></i>&nbsp; Order</button> </div>
                        <div class="clearfix"></div>
                    }
                    @{ DisplayOrders(null); }

                </div>
            </div>
        </div>
    </div>
</div>



<script src="/lib/tinymce/tinymce.min.js" type="text/javascript"></script>
<script type="text/javascript">
    tinymce.init({
        selector: "textarea",
        plugins: ["image paste table link code media"]
    });</script>
<div>
    <form asp-controller="Orders" asp-action="Create" method="post" id="AddOrderForm" style="display: none">
        <input type="hidden" name="DealId" value="@this.Model.Id" />
        <div>
            <label for="ProductId"></label>
            <select for="ProductId" items="products" class="form-control"></select>
            <span validation-for="ProductId" class="text-danger"></span>
        </div>
        <div>
            <label for="Quantity"></label>
            <textarea name="Quantity" id="Quantity" class="form-control"></textarea>
        </div>

        <div>
            <input type="submit" class="btn btn-primary" value="Add comment" />
        </div>
    </form>
</div>

@section Scripts {
    <script>
        function AddOrderForm(productId) {
            $("#AddOrderForm input[name='ProductId']").val(productId);
            $("#AddOrderForm").show();
            $([document.documentElement, document.body]).animate({
                scrollTop: $("#AddOrderForm").offset().top
            }, 1000);
        }

        function sendVote(postId, isUpVote) {
            var token = $("#votesForm input[name=__RequestVerificationToken]").val();
            var json = { postId: postId, isUpVote: isUpVote };
            $.ajax({
                url: "/api/votes",
                type: "POST",
                data: JSON.stringify(json),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                headers: { 'X-CSRF-TOKEN': token },
                success: function (data) {
                    $("#votesCount").html(data.votesCount);
                }
            });
        }</script>
}



